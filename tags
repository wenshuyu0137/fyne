!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wenshuyu/fyne/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230827.0/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
APP_NAME	markdown/makefile	/^APP_NAME=MarkDown$/;"	m
BINARY_NAME	markdown/makefile	/^BINARY_NAME=MarkDown.app$/;"	m
Change	gold/gold_price.go	/^	Change         float64   `json:"chgXau"`$/;"	m	struct:main.Price	typeref:typename:float64
Client	gold/gold_price.go	/^	Client *http.Client$/;"	m	struct:main.Gold	typeref:typename:*http.Client
Currency	gold/gold_price.go	/^	Currency       string    `json:"currency"`$/;"	m	struct:main.Price	typeref:typename:string
Gold	gold/gold_price.go	/^type Gold struct {$/;"	s	package:main
Previous_close	gold/gold_price.go	/^	Previous_close float64   `json:"xauClose"`$/;"	m	struct:main.Price	typeref:typename:float64
Price	gold/gold_price.go	/^	Price          float64   `json:"xauPrice"`$/;"	m	struct:main.Price	typeref:typename:float64
Price	gold/gold_price.go	/^type Price struct {$/;"	s	package:main
Prices	gold/gold_price.go	/^	Prices []Price `json:"items"`$/;"	m	struct:main.Gold	typeref:typename:[]Price
TestGold_GetPrices	gold/go-prices_test.go	/^func TestGold_GetPrices(t *testing.T) {$/;"	f	package:main
TestMain	gold/setup_test.go	/^func TestMain(m *testing.M) {$/;"	f	package:main
Test_RunAPP	markdown/main_test.go	/^func Test_RunAPP(t *testing.T){$/;"	f	package:main
Test_make_ui	markdown/main_test.go	/^func Test_make_ui(t *testing.T) {$/;"	f	package:main
Time	gold/gold_price.go	/^	Time           time.Time `json:"-"`$/;"	m	struct:main.Price	typeref:typename:time.Time
VERSION	markdown/makefile	/^VERSION=1.0.0$/;"	m
app	gold/main.go	/^	app         fyne.App$/;"	m	struct:main.app_config	typeref:typename:fyne.App
app_config	gold/main.go	/^type app_config struct {$/;"	s	package:main
build	markdown/makefile	/^build:$/;"	t
cfg	markdown/main.go	/^var cfg config$/;"	v	package:main	typeref:struct:config
clean	markdown/makefile	/^clean:$/;"	t
config	markdown/main.go	/^type config struct {$/;"	s	package:main
create_menu_items	markdown/main.go	/^func (c *config) create_menu_items(win fyne.Window) {$/;"	f	struct:main.config
cur_file	markdown/main.go	/^	cur_file       fyne.URI$/;"	m	struct:main.config	typeref:typename:fyne.URI
currency	gold/gold_price.go	/^var currency = "USD"$/;"	v	package:main
edit_widget	markdown/main.go	/^	edit_widget    *widget.Entry$/;"	m	struct:main.config	typeref:typename:*widget.Entry
err_log	gold/main.go	/^	err_log     *log.Logger$/;"	m	struct:main.app_config	typeref:typename:*log.Logger
filter	markdown/main.go	/^var filter = storage.NewExtensionFileFilter([]string{$/;"	v	package:main
fyne	README.md	/^# fyne/;"	c
get_post_names	T61Host/serial.go	/^func (s *serial_config) get_post_names() []string {$/;"	f	struct:main.serial_config	typeref:typename:[]string
get_prices	gold/gold_price.go	/^func (g *Gold) get_prices() (*Price, error) {$/;"	f	struct:main.Gold	typeref:typename:(*Price, error)
info_log	gold/main.go	/^	info_log    *log.Logger$/;"	m	struct:main.app_config	typeref:typename:*log.Logger
main	T61Host/1.c	/^int main()$/;"	f	typeref:typename:int
main	T61Host/main.go	/^func main() {$/;"	f	package:main
main	T61Host/main.go	/^package main$/;"	p
main	T61Host/serial.go	/^package main$/;"	p
main	gold/go-prices_test.go	/^package main$/;"	p
main	gold/gold_price.go	/^package main$/;"	p
main	gold/main.go	/^func main() {$/;"	f	package:main
main	gold/main.go	/^package main$/;"	p
main	gold/setup_test.go	/^package main$/;"	p
main	gold/ui.go	/^package main$/;"	p
main	markdown/main.go	/^func main() {$/;"	f	package:main
main	markdown/main.go	/^package main$/;"	p
main	markdown/main_test.go	/^package main$/;"	p
main_window	gold/main.go	/^	main_window fyne.Window$/;"	m	struct:main.app_config	typeref:typename:fyne.Window
make_ui	gold/ui.go	/^func (a *app_config) make_ui() {$/;"	f	unknown:main.app_config
make_ui	markdown/main.go	/^func (c *config) make_ui() (edit *widget.Entry, preview *widget.RichText) {$/;"	f	struct:main.config	typeref:typename:(edit *widget.Entry, preview *widget.RichText)
mode	T61Host/serial.go	/^	mode      serial.Mode$/;"	m	struct:main.serial_config	typeref:typename:serial.Mode
my_app	gold/main.go	/^var my_app app_config$/;"	v	package:main	typeref:struct:app_config
new_config	T61Host/serial.go	/^func new_config() serial_config {$/;"	f	package:main	typeref:typename:serial_config
new_port	T61Host/serial.go	/^func new_port(cfg *serial_config) serial.Port {$/;"	f	package:main	typeref:typename:serial.Port
open	markdown/main.go	/^func (c *config) open(win fyne.Window) func() {$/;"	f	struct:main.config	typeref:typename:func()
port_name	T61Host/serial.go	/^	port_name string$/;"	m	struct:main.serial_config	typeref:typename:string
previer_widget	markdown/main.go	/^	previer_widget *widget.RichText$/;"	m	struct:main.config	typeref:typename:*widget.RichText
run	markdown/makefile	/^run:$/;"	t
save	markdown/main.go	/^func (c *config) save(win fyne.Window) func() {$/;"	f	struct:main.config	typeref:typename:func()
save_as	markdown/main.go	/^func (c *config) save_as(win fyne.Window) func() {$/;"	f	struct:main.config	typeref:typename:func()
save_menu_item	markdown/main.go	/^	save_menu_item *fyne.MenuItem$/;"	m	struct:main.config	typeref:typename:*fyne.MenuItem
serial_config	T61Host/serial.go	/^type serial_config struct {$/;"	s	package:main
serial_send_and_rcv	T61Host/serial.go	/^func serial_send_and_rcv(port serial.Port,data []byte) []byte{$/;"	f	package:main	typeref:typename:[]byte
set_baudrate	T61Host/serial.go	/^func (s *serial_config) set_baudrate(value int) {$/;"	f	struct:main.serial_config
set_port	T61Host/serial.go	/^func (s *serial_config) set_port(port string) {$/;"	f	struct:main.serial_config
test	markdown/makefile	/^test:$/;"	t
testApp	gold/setup_test.go	/^var testApp app_config$/;"	v	package:main	typeref:typename:app_config
